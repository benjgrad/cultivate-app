{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/bengrady4/Documents/Projects/Organizational App/Bloom/components/today/TodayItem.tsx\";\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { PanGestureHandler } from 'react-native-gesture-handler';\nimport Animated from 'react-native-reanimated';\nimport { Text, View } from \"../Themed\";\n\nvar TodayItem = function TodayItem() {\n  var _useState = useState(new Animated.Value(0)),\n      translateX = _useState.translateX,\n      setTranslateX = _useState.setTranslateX;\n\n  var gestureEventHandler = Animated.event([{\n    nativeEvent: {\n      translationX: translateX\n    }\n  }]);\n  return React.createElement(PanGestureHandler, {\n    onGestureEvent: gestureEventHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, React.createElement(TodayItemContent, {\n    name: \"Test\",\n    isComplete: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar TodayItemContent = function TodayItemContent(props) {\n  return React.createElement(View, {\n    style: styles.box,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }\n  }, props.name));\n};\n\nvar styles = StyleSheet.create({\n  box: {\n    height: 100,\n    alignSelf: 'stretch',\n    backgroundColor: '#FDD7E4'\n  }\n});\nexport default TodayItem;","map":{"version":3,"sources":["/home/bengrady4/Documents/Projects/Organizational App/Bloom/components/today/TodayItem.tsx"],"names":["React","useState","PanGestureHandler","Animated","Text","View","TodayItem","Value","translateX","setTranslateX","gestureEventHandler","event","nativeEvent","translationX","TodayItemContent","props","styles","box","name","StyleSheet","create","height","alignSelf","backgroundColor"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAKA,SAASC,IAAT,EAAeC,IAAf;;AAGA,IAAMC,SAAmB,GAAG,SAAtBA,SAAsB,GAAM;AAC9B,kBAAsCL,QAAQ,CAAC,IAAIE,QAAQ,CAACI,KAAb,CAAmB,CAAnB,CAAD,CAA9C;AAAA,MAAQC,UAAR,aAAQA,UAAR;AAAA,MAAoBC,aAApB,aAAoBA,aAApB;;AACA,MAAMC,mBAAmB,GAAGP,QAAQ,CAACQ,KAAT,CAAe,CACvC;AACIC,IAAAA,WAAW,EAAE;AACTC,MAAAA,YAAY,EAAEL;AADL;AADjB,GADuC,CAAf,CAA5B;AAQA,SACI,oBAAC,iBAAD;AAAmB,IAAA,cAAc,EAAEE,mBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAE,MAAxB;AAAgC,IAAA,UAAU,EAAE,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAMH,CAhBD;;AAwBA,IAAMI,gBAAiD,GAAG,SAApDA,gBAAoD,CAACC,KAAD,EAAW;AAEjE,SAAO,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,KAAK,CAACG,IAAb,CAAzB,CAAP;AACH,CAHD;;AAKA,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,GAAG,EAAE;AACDI,IAAAA,MAAM,EAAE,GADP;AAEDC,IAAAA,SAAS,EAAE,SAFV;AAGDC,IAAAA,eAAe,EAAE;AAHhB;AADwB,CAAlB,CAAf;AAQA,eAAejB,SAAf","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { PanGestureHandler } from 'react-native-gesture-handler';\nimport Animated from 'react-native-reanimated';\nimport SwipeBox from '../common/ActionBox';\nimport MainLayout from '../MainLayout';\n\n\nimport { Text, View } from '../Themed';\n\n\nconst TodayItem: React.FC = () => {\n    const { translateX, setTranslateX } = useState(new Animated.Value(0));\n    const gestureEventHandler = Animated.event([\n        {\n            nativeEvent: {\n                translationX: translateX\n            }\n        }\n    ]);\n\n    return (\n        <PanGestureHandler onGestureEvent={gestureEventHandler}>\n            <Animated.View>\n                <TodayItemContent name={\"Test\"} isComplete={false} />\n            </Animated.View>\n        </PanGestureHandler>);\n}\n\ntype TodayItemContentProps = {\n    name: string;\n    isComplete: boolean;\n    startTime?: Date;\n    endTime?: Date;\n}\nconst TodayItemContent: React.FC<TodayItemContentProps> = (props) => {\n    //TODO use the props to render the content properly\n    return <View style={styles.box}><Text>{props.name}</Text></View>;\n}\n\nconst styles = StyleSheet.create({\n    box: {\n        height: 100,\n        alignSelf: 'stretch',\n        backgroundColor: '#FDD7E4',\n    }\n});\n\nexport default TodayItem;"]},"metadata":{},"sourceType":"module"}