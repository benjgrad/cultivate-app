{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/bengrady4/Documents/Projects/Organizational App/Bloom/components/today/TodayItem.tsx\";\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { PanGestureHandler, State } from 'react-native-gesture-handler';\nimport Animated from 'react-native-reanimated';\nvar set = Animated.set,\n    cond = Animated.cond,\n    eq = Animated.eq,\n    spring = Animated.spring,\n    startClock = Animated.startClock,\n    stopClock = Animated.stopClock,\n    clockRunning = Animated.clockRunning,\n    defined = Animated.defined,\n    Value = Animated.Value,\n    Clock = Animated.Clock,\n    event = Animated.event;\nimport { Text, View } from \"../Themed\";\n\nvar runSpring = function runSpring(clock, value, velocity, dest) {\n  var springState = {\n    finished: new Value(0),\n    velocity: new Value(0),\n    position: new Value(0),\n    time: new Value(0)\n  };\n  var config = {\n    damping: 15,\n    mass: 1,\n    stiffness: 100,\n    overshootClamping: false,\n    restSpeedThreshold: 0.001,\n    restDisplacementThreshold: 0.001,\n    toValue: new Value(0)\n  };\n  return [cond(clockRunning(clock), 0, [set(springState.finished, 0), set(springState.velocity, velocity), set(springState.position, value), set(config.toValue, dest), startClock(clock)]), spring(clock, springState, config), cond(springState.finished, stopClock(clock)), springState.position];\n};\n\nvar TodayItem = function TodayItem() {\n  var dragDisplacementX = new Value(0);\n  var gestureState = new Value(-1);\n  var dragVelocityX = new Value(0);\n  var clock = new Clock();\n  var transX = new Value();\n  var gestureEventHandler = event([{\n    nativeEvent: {\n      translationX: dragDisplacementX,\n      velocityX: dragVelocityX,\n      state: gestureState\n    }\n  }]);\n  var translateX = cond(eq(gestureState, State.ACTIVE), [stopClock(clock), set(transX, dragDisplacementX), transX], [set(transX, cond(defined(transX), runSpring(clock, transX, dragVelocityX, 0), 0))]);\n  console.log(\"trsetse\");\n  return React.createElement(PanGestureHandler, {\n    onGestureEvent: gestureEventHandler,\n    onHandlerStateChange: gestureEventHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.View, {\n    style: [styles.box, {\n      transform: [{\n        translateX: translateX\n      }]\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, React.createElement(TodayItemContent, {\n    name: \"Test\",\n    isComplete: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar TodayItemContent = function TodayItemContent(props) {\n  return React.createElement(View, {\n    style: styles.box,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 12\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 37\n    }\n  }, props.name));\n};\n\nvar styles = StyleSheet.create({\n  box: {\n    height: 100,\n    alignSelf: 'stretch',\n    backgroundColor: '#FDD7E4'\n  }\n});\nexport default TodayItem;","map":{"version":3,"sources":["/home/bengrady4/Documents/Projects/Organizational App/Bloom/components/today/TodayItem.tsx"],"names":["React","PanGestureHandler","State","Animated","set","cond","eq","spring","startClock","stopClock","clockRunning","defined","Value","Clock","event","Text","View","runSpring","clock","value","velocity","dest","springState","finished","position","time","config","damping","mass","stiffness","overshootClamping","restSpeedThreshold","restDisplacementThreshold","toValue","TodayItem","dragDisplacementX","gestureState","dragVelocityX","transX","gestureEventHandler","nativeEvent","translationX","velocityX","state","translateX","ACTIVE","console","log","styles","box","transform","TodayItemContent","props","name","StyleSheet","create","height","alignSelf","backgroundColor"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAGA,SAASC,iBAAT,EAA4BC,KAA5B,QAAyC,8BAAzC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAIA,IACIC,GADJ,GAYID,QAZJ,CACIC,GADJ;AAAA,IAEIC,IAFJ,GAYIF,QAZJ,CAEIE,IAFJ;AAAA,IAGIC,EAHJ,GAYIH,QAZJ,CAGIG,EAHJ;AAAA,IAIIC,MAJJ,GAYIJ,QAZJ,CAIII,MAJJ;AAAA,IAKIC,UALJ,GAYIL,QAZJ,CAKIK,UALJ;AAAA,IAMIC,SANJ,GAYIN,QAZJ,CAMIM,SANJ;AAAA,IAOIC,YAPJ,GAYIP,QAZJ,CAOIO,YAPJ;AAAA,IAQIC,OARJ,GAYIR,QAZJ,CAQIQ,OARJ;AAAA,IASIC,KATJ,GAYIT,QAZJ,CASIS,KATJ;AAAA,IAUIC,KAVJ,GAYIV,QAZJ,CAUIU,KAVJ;AAAA,IAWIC,KAXJ,GAYIX,QAZJ,CAWIW,KAXJ;AAcA,SAASC,IAAT,EAAeC,IAAf;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAwBC,KAAxB,EAAoCC,QAApC,EAAmDC,IAAnD,EAAiE;AAC/E,MAAMC,WAAW,GAAG;AAChBC,IAAAA,QAAQ,EAAE,IAAIX,KAAJ,CAAU,CAAV,CADM;AAEhBQ,IAAAA,QAAQ,EAAE,IAAIR,KAAJ,CAAU,CAAV,CAFM;AAGhBY,IAAAA,QAAQ,EAAE,IAAIZ,KAAJ,CAAU,CAAV,CAHM;AAIhBa,IAAAA,IAAI,EAAE,IAAIb,KAAJ,CAAU,CAAV;AAJU,GAApB;AAOA,MAAMc,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE,EADE;AAEXC,IAAAA,IAAI,EAAE,CAFK;AAGXC,IAAAA,SAAS,EAAE,GAHA;AAIXC,IAAAA,iBAAiB,EAAE,KAJR;AAKXC,IAAAA,kBAAkB,EAAE,KALT;AAMXC,IAAAA,yBAAyB,EAAE,KANhB;AAOXC,IAAAA,OAAO,EAAE,IAAIrB,KAAJ,CAAU,CAAV;AAPE,GAAf;AAUA,SAAO,CACHP,IAAI,CAACK,YAAY,CAACQ,KAAD,CAAb,EAAsB,CAAtB,EAAyB,CACzBd,GAAG,CAACkB,WAAW,CAACC,QAAb,EAAuB,CAAvB,CADsB,EAEzBnB,GAAG,CAACkB,WAAW,CAACF,QAAb,EAAuBA,QAAvB,CAFsB,EAGzBhB,GAAG,CAACkB,WAAW,CAACE,QAAb,EAAuBL,KAAvB,CAHsB,EAIzBf,GAAG,CAACsB,MAAM,CAACO,OAAR,EAAiBZ,IAAjB,CAJsB,EAKzBb,UAAU,CAACU,KAAD,CALe,CAAzB,CADD,EAQHX,MAAM,CAACW,KAAD,EAAQI,WAAR,EAAqBI,MAArB,CARH,EASHrB,IAAI,CAACiB,WAAW,CAACC,QAAb,EAAuBd,SAAS,CAACS,KAAD,CAAhC,CATD,EAUHI,WAAW,CAACE,QAVT,CAAP;AAYH,CA9BD;;AAgCA,IAAMU,SAAmB,GAAG,SAAtBA,SAAsB,GAAM;AAE9B,MAAMC,iBAAiB,GAAG,IAAIvB,KAAJ,CAAU,CAAV,CAA1B;AACA,MAAMwB,YAAY,GAAG,IAAIxB,KAAJ,CAAU,CAAC,CAAX,CAArB;AACA,MAAMyB,aAAa,GAAG,IAAIzB,KAAJ,CAAU,CAAV,CAAtB;AAEA,MAAMM,KAAK,GAAG,IAAIL,KAAJ,EAAd;AACA,MAAMyB,MAAM,GAAG,IAAI1B,KAAJ,EAAf;AAIA,MAAM2B,mBAAmB,GAAGzB,KAAK,CAAC,CAC9B;AACI0B,IAAAA,WAAW,EAAE;AACTC,MAAAA,YAAY,EAAEN,iBADL;AAETO,MAAAA,SAAS,EAAEL,aAFF;AAGTM,MAAAA,KAAK,EAAEP;AAHE;AADjB,GAD8B,CAAD,CAAjC;AAUA,MAAMQ,UAAU,GAAGvC,IAAI,CACnBC,EAAE,CAAC8B,YAAD,EAAelC,KAAK,CAAC2C,MAArB,CADiB,EAEnB,CAEIpC,SAAS,CAACS,KAAD,CAFb,EAGId,GAAG,CAACkC,MAAD,EAASH,iBAAT,CAHP,EAIIG,MAJJ,CAFmB,EAQnB,CACIlC,GAAG,CACCkC,MADD,EAECjC,IAAI,CAACM,OAAO,CAAC2B,MAAD,CAAR,EAAkBrB,SAAS,CAACC,KAAD,EAAQoB,MAAR,EAAgBD,aAAhB,EAA+B,CAA/B,CAA3B,EAA8D,CAA9D,CAFL,CADP,CARmB,CAAvB;AAeAS,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAIA,SACI,oBAAC,iBAAD;AAAmB,IAAA,cAAc,EAAER,mBAAnC;AAAwD,IAAA,oBAAoB,EAAEA,mBAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD,CAAU,IAAV;AACI,IAAA,KAAK,EAAE,CACHS,MAAM,CAACC,GADJ,EAEH;AACIC,MAAAA,SAAS,EAAE,CAAC;AAAEN,QAAAA,UAAU,EAAEA;AAAd,OAAD;AADf,KAFG,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAE,MAAxB;AAAgC,IAAA,UAAU,EAAE,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ,CADJ;AAYH,CApDD;;AA4DA,IAAMO,gBAAiD,GAAG,SAApDA,gBAAoD,CAACC,KAAD,EAAW;AAEjE,SAAO,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOG,KAAK,CAACC,IAAb,CAAzB,CAAP;AACH,CAHD;;AAKA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC7BN,EAAAA,GAAG,EAAE;AACDO,IAAAA,MAAM,EAAE,GADP;AAEDC,IAAAA,SAAS,EAAE,SAFV;AAGDC,IAAAA,eAAe,EAAE;AAHhB;AADwB,CAAlB,CAAf;AAQA,eAAexB,SAAf","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { PanGestureHandler, State } from 'react-native-gesture-handler';\nimport Animated from 'react-native-reanimated';\nimport SwipeBox from '../common/ActionBox';\nimport MainLayout from '../MainLayout';\n\nconst {\n    set,\n    cond,\n    eq,\n    spring,\n    startClock,\n    stopClock,\n    clockRunning,\n    defined,\n    Value,\n    Clock,\n    event\n} = Animated;\n\nimport { Text, View } from '../Themed';\n\n\nconst runSpring = (clock: Animated.Clock, value: any, velocity: any, dest: any) => {\n    const springState = {\n        finished: new Value(0),\n        velocity: new Value(0),\n        position: new Value(0),\n        time: new Value(0)\n    };\n\n    const config = {\n        damping: 15,\n        mass: 1,\n        stiffness: 100,\n        overshootClamping: false,\n        restSpeedThreshold: 0.001,\n        restDisplacementThreshold: 0.001,\n        toValue: new Value(0)\n    };\n\n    return [\n        cond(clockRunning(clock), 0, [\n            set(springState.finished, 0),\n            set(springState.velocity, velocity),\n            set(springState.position, value),\n            set(config.toValue, dest),\n            startClock(clock)\n        ]),\n        spring(clock, springState, config),\n        cond(springState.finished, stopClock(clock)),\n        springState.position\n    ];\n}\n\nconst TodayItem: React.FC = () => {\n\n    const dragDisplacementX = new Value(0);\n    const gestureState = new Value(-1);\n    const dragVelocityX = new Value(0);\n\n    const clock = new Clock();\n    const transX = new Value();\n\n    //TODO This should not be running each time. Should I use 'useRef()'? \n    //or maybe just move this code ouside the functional component?\n    const gestureEventHandler = event([\n        {\n            nativeEvent: {\n                translationX: dragDisplacementX,\n                velocityX: dragVelocityX,\n                state: gestureState\n            }\n        }\n    ]);\n\n    const translateX = cond(\n        eq(gestureState, State.ACTIVE),\n        [\n            //state active,\n            stopClock(clock),\n            set(transX, dragDisplacementX),\n            transX\n        ],\n        [\n            set(\n                transX,\n                cond(defined(transX), runSpring(clock, transX, dragVelocityX, 0), 0)\n            )\n        ]\n    );\n    console.log(\"trsetse\");\n\n\n\n    return (\n        <PanGestureHandler onGestureEvent={gestureEventHandler} onHandlerStateChange={gestureEventHandler}>\n            <Animated.View\n                style={[\n                    styles.box,\n                    {\n                        transform: [{ translateX: translateX }]\n                    }\n                ]}>\n                <TodayItemContent name={\"Test\"} isComplete={false} />\n            </Animated.View>\n        </PanGestureHandler>);\n}\n\ntype TodayItemContentProps = {\n    name: string;\n    isComplete: boolean;\n    startTime?: Date;\n    endTime?: Date;\n}\nconst TodayItemContent: React.FC<TodayItemContentProps> = (props) => {\n    //TODO use the props to render the content properly\n    return <View style={styles.box}><Text>{props.name}</Text></View>;\n}\n\nconst styles = StyleSheet.create({\n    box: {\n        height: 100,\n        alignSelf: 'stretch',\n        backgroundColor: '#FDD7E4',\n    }\n});\n\nexport default TodayItem;"]},"metadata":{},"sourceType":"module"}