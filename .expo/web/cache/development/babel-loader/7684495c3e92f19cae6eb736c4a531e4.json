{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/bengrady4/Documents/Projects/Organizational App/Bloom/components/today/TodayItem.tsx\";\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { PanGestureHandler } from 'react-native-gesture-handler';\nimport Animated from 'react-native-reanimated';\nimport { Text, View } from \"../Themed\";\n\nvar runSpring = function runSpring(clock, value, velocity, dest) {\n  var state = {\n    finished: new Value(0),\n    velocity: new Value(0),\n    position: new Value(0),\n    time: new Value(0)\n  };\n  var config = {\n    damping: 7,\n    mass: 1,\n    stiffness: 121.6,\n    overshootClamping: false,\n    restSpeedThreshold: 0.001,\n    restDisplacementThreshold: 0.001,\n    toValue: new Value(0)\n  };\n  return [cond(clockRunning(clock), 0, [set(state.finished, 0), set(state.velocity, velocity), set(state.position, value), set(config.toValue, dest), startClock(clock)]), spring(clock, state, config), cond(state.finished, stopClock(clock)), state.position];\n};\n\nvar TodayItem = function TodayItem() {\n  var _useState = useState(new Animated.Value(0)),\n      _useState2 = _slicedToArray(_useState, 1),\n      translateX = _useState2[0];\n\n  var gestureEventHandler = Animated.event([{\n    nativeEvent: {\n      translationX: translateX\n    }\n  }]);\n  return React.createElement(PanGestureHandler, {\n    onGestureEvent: gestureEventHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.View, {\n    style: [styles.box, {\n      transform: [{\n        translateX: translateX\n      }]\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, React.createElement(TodayItemContent, {\n    name: \"Test\",\n    isComplete: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar TodayItemContent = function TodayItemContent(props) {\n  return React.createElement(View, {\n    style: styles.box,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 37\n    }\n  }, props.name));\n};\n\nvar styles = StyleSheet.create({\n  box: {\n    height: 100,\n    alignSelf: 'stretch',\n    backgroundColor: '#FDD7E4'\n  }\n});\nexport default TodayItem;","map":{"version":3,"sources":["/home/bengrady4/Documents/Projects/Organizational App/Bloom/components/today/TodayItem.tsx"],"names":["React","useState","PanGestureHandler","Animated","Text","View","runSpring","clock","value","velocity","dest","state","finished","Value","position","time","config","damping","mass","stiffness","overshootClamping","restSpeedThreshold","restDisplacementThreshold","toValue","cond","clockRunning","set","startClock","spring","stopClock","TodayItem","translateX","gestureEventHandler","event","nativeEvent","translationX","styles","box","transform","TodayItemContent","props","name","StyleSheet","create","height","alignSelf","backgroundColor"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAKA,SAASC,IAAT,EAAeC,IAAf;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAQC,KAAR,EAAeC,QAAf,EAAyBC,IAAzB,EAAkC;AAChD,MAAMC,KAAK,GAAG;AACVC,IAAAA,QAAQ,EAAE,IAAIC,KAAJ,CAAU,CAAV,CADA;AAEVJ,IAAAA,QAAQ,EAAE,IAAII,KAAJ,CAAU,CAAV,CAFA;AAGVC,IAAAA,QAAQ,EAAE,IAAID,KAAJ,CAAU,CAAV,CAHA;AAIVE,IAAAA,IAAI,EAAE,IAAIF,KAAJ,CAAU,CAAV;AAJI,GAAd;AAOA,MAAMG,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE,CADE;AAEXC,IAAAA,IAAI,EAAE,CAFK;AAGXC,IAAAA,SAAS,EAAE,KAHA;AAIXC,IAAAA,iBAAiB,EAAE,KAJR;AAKXC,IAAAA,kBAAkB,EAAE,KALT;AAMXC,IAAAA,yBAAyB,EAAE,KANhB;AAOXC,IAAAA,OAAO,EAAE,IAAIV,KAAJ,CAAU,CAAV;AAPE,GAAf;AAUA,SAAO,CACHW,IAAI,CAACC,YAAY,CAAClB,KAAD,CAAb,EAAsB,CAAtB,EAAyB,CACzBmB,GAAG,CAACf,KAAK,CAACC,QAAP,EAAiB,CAAjB,CADsB,EAEzBc,GAAG,CAACf,KAAK,CAACF,QAAP,EAAiBA,QAAjB,CAFsB,EAGzBiB,GAAG,CAACf,KAAK,CAACG,QAAP,EAAiBN,KAAjB,CAHsB,EAIzBkB,GAAG,CAACV,MAAM,CAACO,OAAR,EAAiBb,IAAjB,CAJsB,EAKzBiB,UAAU,CAACpB,KAAD,CALe,CAAzB,CADD,EAQHqB,MAAM,CAACrB,KAAD,EAAQI,KAAR,EAAeK,MAAf,CARH,EASHQ,IAAI,CAACb,KAAK,CAACC,QAAP,EAAiBiB,SAAS,CAACtB,KAAD,CAA1B,CATD,EAUHI,KAAK,CAACG,QAVH,CAAP;AAYH,CA9BD;;AAgCA,IAAMgB,SAAmB,GAAG,SAAtBA,SAAsB,GAAM;AAC9B,kBAAqB7B,QAAQ,CAAC,IAAIE,QAAQ,CAACU,KAAb,CAAmB,CAAnB,CAAD,CAA7B;AAAA;AAAA,MAAOkB,UAAP;;AAIA,MAAMC,mBAAmB,GAAG7B,QAAQ,CAAC8B,KAAT,CAAe,CACvC;AACIC,IAAAA,WAAW,EAAE;AACTC,MAAAA,YAAY,EAAEJ;AADL;AADjB,GADuC,CAAf,CAA5B;AAQA,SACI,oBAAC,iBAAD;AAAmB,IAAA,cAAc,EAAEC,mBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD,CAAU,IAAV;AACI,IAAA,KAAK,EAAE,CACHI,MAAM,CAACC,GADJ,EAEH;AACIC,MAAAA,SAAS,EAAE,CAAC;AAAEP,QAAAA,UAAU,EAAEA;AAAd,OAAD;AADf,KAFG,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAE,MAAxB;AAAgC,IAAA,UAAU,EAAE,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ,CADJ;AAYH,CAzBD;;AAiCA,IAAMQ,gBAAiD,GAAG,SAApDA,gBAAoD,CAACC,KAAD,EAAW;AAEjE,SAAO,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOG,KAAK,CAACC,IAAb,CAAzB,CAAP;AACH,CAHD;;AAKA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC7BN,EAAAA,GAAG,EAAE;AACDO,IAAAA,MAAM,EAAE,GADP;AAEDC,IAAAA,SAAS,EAAE,SAFV;AAGDC,IAAAA,eAAe,EAAE;AAHhB;AADwB,CAAlB,CAAf;AAQA,eAAehB,SAAf","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { PanGestureHandler } from 'react-native-gesture-handler';\nimport Animated from 'react-native-reanimated';\nimport SwipeBox from '../common/ActionBox';\nimport MainLayout from '../MainLayout';\n\n\nimport { Text, View } from '../Themed';\n\n\nconst runSpring = (clock, value, velocity, dest) => {\n    const state = {\n        finished: new Value(0),\n        velocity: new Value(0),\n        position: new Value(0),\n        time: new Value(0)\n    };\n\n    const config = {\n        damping: 7,\n        mass: 1,\n        stiffness: 121.6,\n        overshootClamping: false,\n        restSpeedThreshold: 0.001,\n        restDisplacementThreshold: 0.001,\n        toValue: new Value(0)\n    };\n\n    return [\n        cond(clockRunning(clock), 0, [\n            set(state.finished, 0),\n            set(state.velocity, velocity),\n            set(state.position, value),\n            set(config.toValue, dest),\n            startClock(clock)\n        ]),\n        spring(clock, state, config),\n        cond(state.finished, stopClock(clock)),\n        state.position\n    ];\n}\n\nconst TodayItem: React.FC = () => {\n    const [translateX] = useState(new Animated.Value(0));\n\n    //TODO This should not be running each time. Should I use 'useRef()'? \n    //or maybe just move this code ouside the functional component?\n    const gestureEventHandler = Animated.event([\n        {\n            nativeEvent: {\n                translationX: translateX\n            }\n        }\n    ]);\n\n    return (\n        <PanGestureHandler onGestureEvent={gestureEventHandler}>\n            <Animated.View\n                style={[\n                    styles.box,\n                    {\n                        transform: [{ translateX: translateX }]\n                    }\n                ]}>\n                <TodayItemContent name={\"Test\"} isComplete={false} />\n            </Animated.View>\n        </PanGestureHandler>);\n}\n\ntype TodayItemContentProps = {\n    name: string;\n    isComplete: boolean;\n    startTime?: Date;\n    endTime?: Date;\n}\nconst TodayItemContent: React.FC<TodayItemContentProps> = (props) => {\n    //TODO use the props to render the content properly\n    return <View style={styles.box}><Text>{props.name}</Text></View>;\n}\n\nconst styles = StyleSheet.create({\n    box: {\n        height: 100,\n        alignSelf: 'stretch',\n        backgroundColor: '#FDD7E4',\n    }\n});\n\nexport default TodayItem;"]},"metadata":{},"sourceType":"module"}