{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/bengrady4/Documents/Projects/Organizational App/Bloom/screens/TodayScreen.tsx\";\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport MainLayout from \"../components/MainLayout\";\nimport { Text } from \"../components/Themed\";\nimport SwipeItem from \"../components/today/TodayItem\";\n\nvar TodayScreen = function TodayScreen() {\n  var content = [];\n\n  for (var i = 0; i < 10; i++) {\n    content.push(React.createElement(SwipeItem, {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 22\n      }\n    }, React.createElement(TodayItemContent, {\n      isComplete: false,\n      name: \"Item \" + i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 41\n      }\n    })));\n  }\n\n  var initialData = _toConsumableArray(Array(10)).fill(0).map(function (d, index) {\n    return {\n      text: \"Row \" + index,\n      key: \"key-\" + index,\n      backgroundColor: getColor(index)\n    };\n  });\n\n  return React.createElement(MainLayout, {\n    title: \"Today\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), content);\n};\n\nvar styles = StyleSheet.create({\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  }\n});\n\nvar TodayItemContent = function TodayItemContent(props) {\n  return React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }\n  }, props.name);\n};\n\nfunction getColor(i) {\n  var multiplier = 255 / (NUM_ITEMS - 1);\n  var colorVal = i * multiplier;\n  return \"rgb(\" + colorVal + \", \" + Math.abs(128 - colorVal) + \", \" + (255 - colorVal) + \")\";\n}\n\nexport default TodayScreen;","map":{"version":3,"sources":["/home/bengrady4/Documents/Projects/Organizational App/Bloom/screens/TodayScreen.tsx"],"names":["React","MainLayout","Text","SwipeItem","TodayScreen","content","i","push","initialData","Array","fill","map","d","index","text","key","backgroundColor","getColor","styles","StyleSheet","create","separator","marginVertical","height","width","TodayItemContent","props","name","multiplier","NUM_ITEMS","colorVal","Math","abs"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAGA,OAAOC,UAAP;AAGA,SAASC,IAAT;AACA,OAAOC,SAAP;;AAEA,IAAMC,WAAqB,GAAG,SAAxBA,WAAwB,GAAM;AAEhC,MAAIC,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBD,IAAAA,OAAO,CAACE,IAAR,CAAa,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAED,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmB,oBAAC,gBAAD;AAAkB,MAAA,UAAU,EAAE,KAA9B;AAAqC,MAAA,IAAI,EAAE,UAAUA,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB,CAAb;AACH;;AACD,MAAME,WAAW,GAAG,mBAAIC,KAAK,CAAC,EAAD,CAAT,EAAeC,IAAf,CAAoB,CAApB,EAAuBC,GAAvB,CAA2B,UAACC,CAAD,EAAIC,KAAJ;AAAA,WAAe;AAC1DC,MAAAA,IAAI,WAASD,KAD6C;AAE1DE,MAAAA,GAAG,WAASF,KAF8C;AAG1DG,MAAAA,eAAe,EAAEC,QAAQ,CAACJ,KAAD;AAHiC,KAAf;AAAA,GAA3B,CAApB;;AAMA,SACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAIKR,OAJL,CADJ;AAQH,CApBD;;AAsBA,IAAMa,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,cAAc,EAAE,EADT;AAEPC,IAAAA,MAAM,EAAE,CAFD;AAGPC,IAAAA,KAAK,EAAE;AAHA;AADkB,CAAlB,CAAf;;AAeA,IAAMC,gBAAiD,GAAG,SAApDA,gBAAoD,CAACC,KAAD,EAAW;AAEjE,SAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,KAAK,CAACC,IAAb,CAAP;AACH,CAHD;;AAIA,SAASV,QAAT,CAAkBX,CAAlB,EAA6B;AACzB,MAAMsB,UAAU,GAAG,OAAOC,SAAS,GAAG,CAAnB,CAAnB;AACA,MAAMC,QAAQ,GAAGxB,CAAC,GAAGsB,UAArB;AACA,kBAAcE,QAAd,UAA2BC,IAAI,CAACC,GAAL,CAAS,MAAMF,QAAf,CAA3B,WAAwD,MAAMA,QAA9D;AACH;;AACD,eAAe1B,WAAf","sourcesContent":["import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport SwipeBox from '../components/common/ActionBox';\nimport MainLayout from '../components/MainLayout';\n\n\nimport { Text, View } from '../components/Themed';\nimport SwipeItem from '../components/today/TodayItem';\n\nconst TodayScreen: React.FC = () => {\n\n    var content = [];\n    for (let i = 0; i < 10; i++) {\n        content.push(<SwipeItem key={i}><TodayItemContent isComplete={false} name={\"Item \" + i} /></SwipeItem>)\n    }\n    const initialData = [...Array(10)].fill(0).map((d, index) => ({\n        text: `Row ${index}`,\n        key: `key-${index}`, // Note: It's bad practice to use index as your key. Don't do it in production!\n        backgroundColor: getColor(index),\n\n    }))\n    return (\n        <MainLayout title=\"Today\" >\n            <FlatList>\n\n            </FlatList>\n            {content}\n        </MainLayout >\n    );\n}\n\nconst styles = StyleSheet.create({\n    separator: {\n        marginVertical: 30,\n        height: 1,\n        width: '80%',\n    },\n});\n\n\ntype TodayItemContentProps = {\n    name: string;\n    isComplete: boolean;\n    startTime?: Date;\n    endTime?: Date;\n}\nconst TodayItemContent: React.FC<TodayItemContentProps> = (props) => {\n    //TODO use the props to render the content properly\n    return <Text>{props.name}</Text>;\n}\nfunction getColor(i: number) {\n    const multiplier = 255 / (NUM_ITEMS - 1)\n    const colorVal = i * multiplier\n    return `rgb(${colorVal}, ${Math.abs(128 - colorVal)}, ${255 - colorVal})`\n}\nexport default TodayScreen;"]},"metadata":{},"sourceType":"module"}