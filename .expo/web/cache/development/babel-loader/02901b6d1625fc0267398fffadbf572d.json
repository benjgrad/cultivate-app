{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/bengrady4/Documents/Projects/Organizational App/Bloom/components/today/TodayItem.tsx\";\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { PanGestureHandler, State } from 'react-native-gesture-handler';\nimport Animated from 'react-native-reanimated';\nvar set = Animated.set,\n    cond = Animated.cond,\n    eq = Animated.eq,\n    spring = Animated.spring,\n    startClock = Animated.startClock,\n    stopClock = Animated.stopClock,\n    clockRunning = Animated.clockRunning,\n    defined = Animated.defined,\n    Value = Animated.Value,\n    Clock = Animated.Clock,\n    event = Animated.event;\n\nvar runSpring = function runSpring(clock, value, velocity, dest) {\n  var springState = {\n    finished: new Value(0),\n    velocity: new Value(0),\n    position: new Value(0),\n    time: new Value(0)\n  };\n  var config = {\n    damping: 15,\n    mass: 1,\n    stiffness: 100,\n    overshootClamping: false,\n    restSpeedThreshold: 0.0,\n    restDisplacementThreshold: 0.001,\n    toValue: new Value(0)\n  };\n  return [cond(clockRunning(clock), 0, [set(springState.finished, 0), set(springState.velocity, velocity), set(springState.position, value), set(config.toValue, dest), startClock(clock)]), spring(clock, springState, config), cond(springState.finished, stopClock(clock)), springState.position];\n};\n\nvar SwipeItem = function SwipeItem(props) {\n  var dragDisplacementX = new Value(0);\n  var gestureState = new Value(-1);\n  var dragVelocityX = new Value(0);\n  var clock = new Clock();\n  var desiredTranslationX = new Value();\n  var gestureEventHandler = event([{\n    nativeEvent: {\n      translationX: dragDisplacementX,\n      velocityX: dragVelocityX,\n      state: gestureState\n    }\n  }]);\n  var currTranslationX = cond(eq(gestureState, State.ACTIVE), [stopClock(clock), set(desiredTranslationX, dragDisplacementX), desiredTranslationX], [set(desiredTranslationX, cond(defined(desiredTranslationX), runSpring(clock, desiredTranslationX, dragVelocityX, 0), 0))]);\n  return React.createElement(PanGestureHandler, {\n    onGestureEvent: gestureEventHandler,\n    onHandlerStateChange: gestureEventHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.View, {\n    style: [styles.box, {\n      transform: [{\n        translateX: currTranslationX\n      }]\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, props.children));\n};\n\nvar styles = StyleSheet.create({\n  box: {\n    height: 100,\n    alignSelf: 'stretch',\n    backgroundColor: '#FDD7E4'\n  }\n});\nexport default SwipeItem;","map":{"version":3,"sources":["/home/bengrady4/Documents/Projects/Organizational App/Bloom/components/today/TodayItem.tsx"],"names":["React","PanGestureHandler","State","Animated","set","cond","eq","spring","startClock","stopClock","clockRunning","defined","Value","Clock","event","runSpring","clock","value","velocity","dest","springState","finished","position","time","config","damping","mass","stiffness","overshootClamping","restSpeedThreshold","restDisplacementThreshold","toValue","SwipeItem","props","dragDisplacementX","gestureState","dragVelocityX","desiredTranslationX","gestureEventHandler","nativeEvent","translationX","velocityX","state","currTranslationX","ACTIVE","styles","box","transform","translateX","children","StyleSheet","create","height","alignSelf","backgroundColor"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { PanGestureHandler, State } from 'react-native-gesture-handler';\nimport Animated from 'react-native-reanimated';\nimport SwipeBox from '../common/ActionBox';\nimport MainLayout from '../MainLayout';\n\nconst {\n    set,\n    cond,\n    eq,\n    spring,\n    startClock,\n    stopClock,\n    clockRunning,\n    defined,\n    Value,\n    Clock,\n    event\n} = Animated;\n\nimport { Text, View } from '../Themed';\n\n\nconst runSpring = (clock: Animated.Clock, value: any, velocity: any, dest: any) => {\n    const springState = {\n        finished: new Value(0),\n        velocity: new Value(0),\n        position: new Value(0),\n        time: new Value(0)\n    };\n\n    const config = {\n        damping: 15,\n        mass: 1,\n        stiffness: 100,\n        overshootClamping: false,\n        restSpeedThreshold: 0.0,\n        restDisplacementThreshold: 0.001,\n        toValue: new Value(0)\n    };\n\n    return [\n        cond(clockRunning(clock), 0, [\n            set(springState.finished, 0),\n            set(springState.velocity, velocity),\n            set(springState.position, value),\n            set(config.toValue, dest),\n            startClock(clock)\n        ]),\n        spring(clock, springState, config),\n        cond(springState.finished, stopClock(clock)),\n        springState.position\n    ];\n}\n\ntype SwipeItemProps = {\n    swipeLeft?: () => void;\n    swipeRight?: () => void;\n\n}\n\nconst SwipeItem: React.FC<SwipeItemProps> = (props) => {\n\n    const dragDisplacementX = new Value(0);\n    const gestureState = new Value(-1);\n    const dragVelocityX = new Value(0);\n\n    const clock = new Clock();\n    const desiredTranslationX = new Value();\n\n    //TODO This should not be running each time. Should I use 'useRef()'? \n    //or maybe just move this code ouside the functional component?\n    const gestureEventHandler = event([\n        {\n            nativeEvent: {\n                translationX: dragDisplacementX,\n                velocityX: dragVelocityX,\n                state: gestureState\n            }\n        }\n    ]);\n\n    const currTranslationX = cond(\n        eq(gestureState, State.ACTIVE),\n        [\n            // When the guesture is active, display the dragged displacement\n            stopClock(clock),\n            set(desiredTranslationX, dragDisplacementX),\n            desiredTranslationX\n        ],\n        [\n            set(\n                desiredTranslationX,\n                cond(defined(desiredTranslationX), runSpring(clock, desiredTranslationX, dragVelocityX, 0), 0)\n            )\n        ]\n    );\n\n\n\n    return (\n        <PanGestureHandler onGestureEvent={gestureEventHandler} onHandlerStateChange={gestureEventHandler}>\n            <Animated.View\n                style={[\n                    styles.box,\n                    {\n                        transform: [{ translateX: currTranslationX }]\n                    }\n                ]}>\n                {props.children}\n            </Animated.View>\n        </PanGestureHandler>);\n}\n\n\nconst styles = StyleSheet.create({\n    box: {\n        height: 100,\n        alignSelf: 'stretch',\n        backgroundColor: '#FDD7E4',\n    }\n});\n\nexport default SwipeItem;"]},"metadata":{},"sourceType":"module"}